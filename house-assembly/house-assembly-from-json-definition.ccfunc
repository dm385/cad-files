VAR rootAsmId, wallPrtId, sketchId, planeId, sketchLines, i, line,
		points, prevLine, input, inst;

input = {
	asmName: "houseAsm",	// name of the root assembly
	instances:[{
			name: "wall1",	// name of the instance
			points: [	// start and end points of the sketch lines
				//{ start: {0,0,0}, end: {0,0,100}},
				[{0,0,0}, {0,0,100}],
				[{0,0,100}, {100,0,100}],
				[{100,0,100}, {150, 0, 50}],
				[{150, 0, 50}, {100,0,0}],
				[{100,0,0}, {0,0,0}]
			],
			thickness: 10,	// thickness of the wall
			trans: [{0,0,0}, {0,1,0}, {-1,0,0}] // transformation of the instance
		}, {
			name: "wall2",	// name of the instance
			points:	[	// start and end points of the sketch lines
					[{0,0,0}, {0,0,100}],
					[{0,0,100}, {100,0,100}],
					[{100,0,100}, {100,0,0}],
					[{100,0,0}, {0,0,0}]
				],
			thickness: 10,	// thickness of the wall
			trans: [{0,0,0}, {0,1,0}, {0,0,1}] // transformation of the instance
		}, {
			name: "wall3",	// name of the instance
			points:	[	// start and end points of the sketch lines
					[{0,0,0}, {0,0,100}],
					[{0,0,100}, {100,0,100}],
					[{100,0,100}, {150, 0, 50}],
					[{150, 0, 50}, {100,0,0}],
					[{100,0,0}, {0,0,0}]
				],
			thickness: 10,	// thickness of the wall
			trans:[{100,0,10}, {0,1,0}, {-1,0,0}] // transformation of the instance
		}, {
			name:	"wall4",	// name of the instance
			points:	[	// start and end points of the sketch lines
					[{0,0,0}, {0,0,100}],
					[{0,0,100}, {100,0,100}],
					[{100,0,100}, {100,0,0}],
					[{100,0,0}, {0,0,0}]
				],
			thickness: 10,	// thickness of the wall
			trans:[{90,0,110}, {0,1,0}, {0,0,-1}] // transformation of the instance
		}
	]
};

// create a new assembly
rootAsmId = @AssemblyAPI_v1.createRootAssembly({ name: input.asmName });

FORALL input.instances inst DO
	wallPrtId = @AssemblyAPI_v1.createPartAsTemplate({ name: inst.name + "Prt" });
	sketchId = @SketchAPI_v1.createSketch({ partId: wallPrtId });
	planeId = @PartAPI_v1.getGeometryByName({ refId: wallPrtId, name: "Top" });
	@SketchAPI_v1.setWorkPlane({ sketchId: sketchId, planeId: planeId });
	
	points = inst.points;
	sketchLines = [];
	FOR i = 0 TO MAX(points) DO
		IF i = 0 THEN
			line = @SketchAPI_v1.addGeometry({ sketchId: sketchId, type: "Line", geomTypeParams: { startPos: points[i][0], endPos: points[i][1] } });
		ELSE
			prevLine = sketchLines[i-1];
			line = @SketchAPI_v1.addPolycurveSegment({ sketchId: sketchId, incidentPointId: prevLine.GetEndId(), geomTypeParams: { startPos: points[i][0], endPos: points[i][1] } });
		ENDIF
		CADH_InsArray(sketchLines, -1, line);
	NEXT
	@PartAPI_v1.closeFeature({ id: sketchId });
	
	@PartAPI_v1.extrusion({ partId: wallPrtId, selectedIds: sketchLines, limit2: inst.thickness, direction: {0,1,0} });
	@AssemblyAPI_v1.addInstance([{ productId: wallPrtId, ownerId: rootAsmId, transformation: inst.trans }]);
NEXT

RETURN rootAsmId;